#!/usr/bin/env python
#
# zml command-line interface
#
# Author: Joseph Wecker
#
#------------------------------------------------------------------------------
# 
# The MIT License
# 
# Copyright (c) 2009 Joseph Wecker
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

import sys, zml, os.path
from optparse import OptionParser

def main():
    opts = OptionParser('Usage: %prog [-h] [OPTIONS] INPUTFILE(s)')
    opts.add_option('-f', '--format', dest='outformat',
            default='erlang', metavar='OUTPUT_FORMAT',
            help='Output format, currently one of: erlang')
    opts.add_option('-o', '--outfile', dest='outfile',
            default=None,metavar='FILENAME',
            help='Output filename (defaults to same as input file but with extension changed)')
    opts.add_option('-d', '--dir', dest='outdir',
            default='./', metavar='DIRNAME',
            help='Output directory when there are multiple chunks (defaults to ./)')
    opts.add_option('-v', '--verbose',
            action='store_true', dest='verbose', default=False,
            help='Verbose output (to stderr)')

    (options, args) = opts.parse_args()

    if len(args) < 1:
        opts.error('No input file specified')
    else:
        if options.outfile and options.romanize:
            opts.error('Cannot specify an output file when romanizing (because it creates multiple files)')
        if options.outfile and len(args) > 1:
            opts.error('Cannot specify an output file when multiple files input')
        
        for infile in args:
            if options.verbose:
                sys.stderr.write('Parsing %s' % infile)

            # Actual parsing of the ZML file(s)
            zparser = zml.ZmlParser()
            translated = zparser.parse_file(infile)
            
            if options.outfile:
                outfilecore = options.outfile
            else:
                outfilecore = infile.replace('.zml','.html')

            if options.romanize:
                zparser.romanize(dir=options.outdir, filename=outfilecore)
            elif options.outfile == '-' and translated:
                print ''.join(translated)
            else:
                outfile = os.path.join(options.outdir, outfilecore)
                open(outfile, 'w+').write(translated)


if __name__ == '__main__':
    main()
